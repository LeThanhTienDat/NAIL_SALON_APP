<UserControl x:Class="NAIL_SALON.Views.Customer.CustomerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NAIL_SALON.Views.Customer"
             xmlns:models="clr-namespace:NAIL_SALON.Models"
             mc:Ignorable="d"      
             xmlns:intbool="clr-namespace:NAIL_SALON.Models.Components"
             xmlns:materialDesignExtensions="http://materialdesigninxaml.net/winfx/xaml/extensions"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="850" d:DesignWidth="1500"
             Background="#bbdefb">
    <UserControl.Resources>
        <intbool:IntBoolConverter x:Key="IntBoolConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="89*"/>
            <RowDefinition Height="654*"/>
            <RowDefinition Height="107*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <materialDesign:PopupBox
                               Margin="36,0,0,0"
                               VerticalAlignment="Center"
                               PlacementMode="RightAndAlignMiddles"
                               Style="{StaticResource MaterialDesignMultiFloatingActionPopupBox}"
                               ToolTip="Manage items"
                               UnfurlOrientation="Horizontal" Width="57">
                <StackPanel Orientation="Horizontal">
                    <Button   Click="OpenCreateCustomer"  
                              ToolTip="Add new Customer">

                        <Path Width="15"
                              Height="15"
                              Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                              Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
                              Stretch="Uniform" />
                    </Button>
                </StackPanel>
            </materialDesign:PopupBox>
        </Grid>
        <Grid Grid.Row="1">
            <DataGrid ItemsSource="{Binding Customers}" AutoGenerateColumns="False"
                              CanUserAddRows="False" RowHeight="80"
                              HorizontalContentAlignment="Center"
                              GridLinesVisibility="Horizontal" RowHeaderWidth="0" HeadersVisibility="Column"
                              Margin="28,10,28,10" Width="1443"                            
                              >

                <DataGrid.Resources>
                    <Style TargetType="DataGridCell">
                        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>

                <!-- Style for Row-->
                <DataGrid.RowStyle>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsOrdering}" Value="true">
                                <Setter Property="Background" Value="#FFC0CB"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsOrdering}" Value="false">
                                <Setter Property="Background" Value="#DFFFD6"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>

                <DataGrid.Columns>
                    <!-- ID column -->
                    <DataGridTextColumn Header="No." IsReadOnly="True" Binding="{Binding RowNumber}">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="MaxHeight" Value="50"/>
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>

                    <!-- Name column -->
                    <DataGridTextColumn Binding="{Binding Name}" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="MaxHeight" Value="50"/>
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBox    Width="120"  
                                            VerticalContentAlignment="Center"
                                           materialDesign:HintAssist.Hint="Name"
                                           materialDesign:TextFieldAssist.HasClearButton="True"
                                           Text="{Binding DataContext.FilterName, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <!-- Phone column -->
                    <DataGridTextColumn Binding="{Binding Phone}" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="MaxHeight" Value="50"/>
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBox Width="120"
                                           materialDesign:HintAssist.Hint="Phone"
                                           materialDesign:TextFieldAssist.HasClearButton="True"
                                           Text="{Binding DataContext.FilterPhone, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>


                    <!-- Address column -->
                    <DataGridTextColumn Binding="{Binding FullAddress}" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="MaxHeight" Value="100"/>
                                <Setter Property="Width" Value="150"/>
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBox Width="120"
                                         
                                           materialDesign:HintAssist.Hint="Address"
                                           materialDesign:TextFieldAssist.HasClearButton="True"
                                           Text="{Binding DataContext.FilterAddress, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>


                    <!-- BirthDay column -->
                    <DataGridTextColumn Binding="{Binding BirthDay, StringFormat=dd/MM/yyyy}" IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="TextWrapping" Value="Wrap"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="MaxHeight" Value="50"/>
                                <Setter Property="VerticalAlignment" Value="Center" />
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                        <DataGridTextColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBox Width="120"
                                            materialDesign:HintAssist.Hint="BirthDay"
                                            materialDesign:TextFieldAssist.HasClearButton="True"
                                            Text="{Binding DataContext.FilterBirthDay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType=DataGrid}}" />
                            </DataTemplate>
                        </DataGridTextColumn.HeaderTemplate>
                    </DataGridTextColumn>

                    <!-- Action column -->
                    <DataGridTemplateColumn >
                        <DataGridTemplateColumn.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="Action" HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.HeaderTemplate>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <Button Content="Edit" Width="110" Margin="0,0,5,0"
                                                            Command="{Binding DataContext.OpenEditCustomerCommand,
                                                              RelativeSource={RelativeSource AncestorType=UserControl}}"
                                            CommandParameter="{Binding}" />
                                    <Button Content="Delete"  Width="110"
                                            Command="{Binding DataContext.DeleteCustomerCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                            CommandParameter="{Binding}"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.HeaderStyle>
                            <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            </Style>
                        </DataGridTemplateColumn.HeaderStyle>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Grid Grid.Row="2">
            <Button Content="Previous" Command="{Binding PrevPageCommand}" HorizontalAlignment="Left" Margin="1275,17,0,0" VerticalAlignment="Top" FontSize="16"/>
            <Button Content="Next" Command="{Binding NextPageCommand}" HorizontalAlignment="Left" Margin="1374,17,0,0" VerticalAlignment="Top" FontSize="16" Width="93"/>
            <Button Content="{Binding ShowCurrentPage}" HorizontalAlignment="Left" Margin="1156,17,0,0" VerticalAlignment="Top" FontSize="16" Width="94"/>

        </Grid>
    </Grid>
</UserControl>
